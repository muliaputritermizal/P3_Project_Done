/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.putri.mulia.pengolahan.komik;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;

/**
 *
 * @author OWNER
 */
public class FormKomik extends javax.swing.JFrame {

    /**
     * Creates new form FormKomik
     */
    public FormKomik() {
        initComponents();
        
        inputIdKomik.setEditable(false);
        displayPenulis.setEditable(false);

        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelKomik = new javax.swing.JLabel();
        labelPenulis = new javax.swing.JLabel();
        inputPenulis = new javax.swing.JComboBox();
        inputIdKomik = new javax.swing.JTextField();
        displayPenulis = new javax.swing.JTextField();
        labelJudul = new javax.swing.JLabel();
        inputJudul = new javax.swing.JTextField();
        labelPenerbit = new javax.swing.JLabel();
        inputPenerbit = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKomik = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        labelKomik.setText("ID Komik");

        labelPenulis.setText("Penulis");

        inputPenulis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inputPenulis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPenulisActionPerformed(evt);
            }
        });

        labelJudul.setText("Judul");

        labelPenerbit.setText("Penerbit");

        tableKomik.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID Komik", "Judul", "ID Penulis", "Penerbit"
            }
        ));
        tableKomik.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKomikMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableKomik);
        if (tableKomik.getColumnModel().getColumnCount() > 0) {
            tableKomik.getColumnModel().getColumn(0).setResizable(false);
        }

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jButton1.setText("Daftar Penulis");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Daftar Komik");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPenulis)
                            .addComponent(labelKomik, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelJudul)
                            .addComponent(labelPenerbit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(displayPenulis)
                            .addComponent(inputPenulis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputIdKomik)
                            .addComponent(inputJudul)
                            .addComponent(inputPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUbah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelKomik)
                            .addComponent(inputIdKomik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTambah))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelJudul)
                            .addComponent(inputJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPenulis)))
                    .addComponent(btnUbah, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(displayPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPenerbit)
                            .addComponent(inputPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnHapus)
                        .addGap(34, 34, 34)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        showDataKomik();
        
        try {
            getDataURL dataurl = new getDataURL();

            String url = "http://localhost/komik_server/penulis/read";

            String data = dataurl.getData(url);

            Object obj = JSONValue.parse(data);
            JSONArray dataArray = (JSONArray) obj;

            System.out.println("Banyak datanya : " + dataArray.size());

            inputPenulis.removeAllItems();
            inputPenulis.addItem("ID Penulis");

            for (int i = 0; i < dataArray.size(); i++) {
                JSONObject getData = (JSONObject) dataArray.get(i);

                inputPenulis.addItem(getData.get("id_penulis").toString());
            }

        } catch (IOException ex) {
            Logger.getLogger(FormKomik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowActivated

    private void inputPenulisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPenulisActionPerformed
            String id_penulis = String.valueOf(inputPenulis.getSelectedItem());

        if (id_penulis.equals("ID Penulis")) {
            id_penulis = "0";
            displayPenulis.setText("");
        }

        System.out.println("ID Penulis yang di pilih : " + id_penulis);

        showDataPenulis(id_penulis);
    }//GEN-LAST:event_inputPenulisActionPerformed

    private void tableKomikMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKomikMouseClicked
       int row = tableKomik.getSelectedRow();

        String id_komik = (tableKomik.getModel().getValueAt(row, 1).toString());
        String judul = (tableKomik.getModel().getValueAt(row, 2).toString());
        String id_penulis = (tableKomik.getModel().getValueAt(row, 3).toString());
        String penerbit = (tableKomik.getModel().getValueAt(row, 4).toString());

        System.out.println("ID Komik : " + id_komik);
        System.out.println("Judul : " + judul);
        System.out.println("ID Penulis : " + id_penulis);
        System.out.println("Penerbit : " + penerbit);
        
        showDataPenulis(id_penulis);

        inputIdKomik.setText(id_komik);
        inputJudul.setText(judul);
        inputPenulis.setSelectedItem(id_penulis);
        inputPenerbit.setText(penerbit);

        btnTambah.setEnabled(false);
        btnHapus.setEnabled(true);
        btnUbah.setEnabled(true);
    }//GEN-LAST:event_tableKomikMouseClicked

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String judul = inputJudul.getText().replaceAll(" ", "%20");
        String id_penulis = String.valueOf(inputPenulis.getSelectedItem());
        String penerbit = inputPenerbit.getText().replaceAll(" ", "%20");

        if (judul.isEmpty() || id_penulis.equals("ID Penulis")) {

            JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong", "Informasi", JOptionPane.ERROR_MESSAGE);

        } else {

            JOptionPane.showMessageDialog(this, "Data Berhasil disimpan", "Informasi", JOptionPane.INFORMATION_MESSAGE);

            String url = "http://localhost/komik_server/komik/create/" + judul + "/" + id_penulis + "/" + penerbit;

            getDataURL dataurl = new getDataURL();

            try {

                String data = dataurl.getData(url);
                System.out.println(data);

                inputJudul.setText("");
                inputPenerbit.setText("");

                
                
            } catch (IOException ex) {

                Logger.getLogger(FormKomik.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        String id_komik = inputIdKomik.getText();
        String judul = inputJudul.getText().replaceAll(" ", "%20");
        String id_penulis = String.valueOf(inputPenulis.getSelectedItem());
        String penerbit = inputPenerbit.getText().replaceAll(" ", "%20");
        
        if (judul.isEmpty()) {

            JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong", "Informasi", JOptionPane.ERROR_MESSAGE);

        } else {

            JOptionPane.showMessageDialog(this, "Data Berhasil diupdate", "Informasi", JOptionPane.INFORMATION_MESSAGE);

            String url = "http://localhost/komik_server/komik/update/" + id_komik + "/" + judul + "/" + id_penulis + "/" + penerbit;

            getDataURL dataurl = new getDataURL();

            try {

                String data = dataurl.getData(url);
                System.out.println(data);

                inputJudul.setText("");
                inputPenerbit.setText("");

                btnTambah.setEnabled(true);
                btnHapus.setEnabled(false);
                btnUbah.setEnabled(false);

            } catch (IOException ex) {

                Logger.getLogger(FormPenulis.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        String id_komik = inputIdKomik.getText();

        String url = "http://localhost/komik_server/komik/delete/" + id_komik;

        getDataURL dataurl = new getDataURL();

        try {

            System.out.println("Menghapus : " + id_komik);

            String data = dataurl.getData(url);
            System.out.println(data);

            inputIdKomik.setText("");
            inputJudul.setText("");
            inputPenulis.setSelectedItem("");
            displayPenulis.setText("");
            inputPenerbit.setText("");

            btnTambah.setEnabled(true);
            btnHapus.setEnabled(false);
            btnUbah.setEnabled(false);

            showDataKomik();

        } catch (IOException ex) {

            Logger.getLogger(FormPenulis.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       FormPenulis callForm = new FormPenulis();
       callForm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

     public void showDataKomik() {
        try {
            getDataURL dataurl = new getDataURL();
            DefaultTableModel model = (DefaultTableModel) tableKomik.getModel();

            model.setRowCount(0);

            String url = "http://localhost/komik_server/komik/read";

            String data = dataurl.getData(url);
            Object obj = JSONValue.parse(data);
            JSONArray dataArray = (JSONArray) obj;

            System.out.println("Banyak datanya : " + dataArray.size());

            for (int i = 0; i < dataArray.size(); i++) {
                JSONObject getData = (JSONObject) dataArray.get(i);

                Object[] row = {
                    i + 1,
                    getData.get("id_komik"),
                    getData.get("judul"),
                    getData.get("id_penulis"),
                    getData.get("penerbit"),
                  
                };

                model.addRow(row);
            }
        } catch (IOException ex) {
            Logger.getLogger(FormKomik.class.getName()).log(Level.SEVERE, null, ex);
        }
    
     }
     
     public void showDataPenulis(String id_penulis) {
        try {
            getDataURL dataurl = new getDataURL();

            String url = "http://localhost/komik_server/penulis/read/" + id_penulis;

            String data = dataurl.getData(url);
            System.out.println(data);

            Object obj = JSONValue.parse(data);
            JSONArray dataArray = (JSONArray) obj;

            System.out.println("Banyak Datanya : " + dataArray.size());

            if (dataArray.size() > 0) {
                JSONObject getData = (JSONObject) dataArray.get(0);
                Object nama_penulis = getData.get("nama_penulis");

                displayPenulis.setText((String) nama_penulis);
            }

        } catch (IOException ex) {
            Logger.getLogger(FormKomik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKomik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKomik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKomik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKomik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKomik().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JTextField displayPenulis;
    private javax.swing.JTextField inputIdKomik;
    private javax.swing.JTextField inputJudul;
    private javax.swing.JTextField inputPenerbit;
    private javax.swing.JComboBox inputPenulis;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelJudul;
    private javax.swing.JLabel labelKomik;
    private javax.swing.JLabel labelPenerbit;
    private javax.swing.JLabel labelPenulis;
    private javax.swing.JTable tableKomik;
    // End of variables declaration//GEN-END:variables
}
